name: Android Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  android-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 29
          build-tools: 33.0.0

      - name: Enable KVM (hardware acceleration)
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install dependencies
        run: |
          echo "Installing WebDriverIO and test dependencies..."
          npm ci
          npm list @wdio/cli @wdio/appium-service --depth=0 || echo "Dependencies installed successfully"

      - name: Download demo APK (Simple Calculator)
        run: |
          mkdir -p ./apks
          echo "📦 Downloading demo APK..."
          curl -L -o ./apks/calculator.apk \
            "https://github.com/SimpleMobileTools/Simple-Calculator/releases/download/5.10.5/calculator-release.apk"
          APK_SIZE=$(stat -c%s "./apks/calculator.apk")
          echo "📁 APK size: $APK_SIZE bytes"
          if [ $APK_SIZE -lt 100000 ]; then
            echo "❌ APK file too small — download failed"
            exit 1
          fi
          echo "✅ Calculator APK downloaded successfully"

      - name: Run tests with Android emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          cores: 2
          ram-size: 3072M
          heap-size: 512M
          avd-name: test_emulator
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -no-snapshot-save -accel on
          disable-animations: true
          script: |
            set -e
            echo "🔄 Waiting for emulator..."
            adb wait-for-device

            echo "⏳ Waiting for boot completion..."
            for i in $(seq 1 120); do
              BOOT_COMPLETED=$(adb shell getprop sys.boot_completed 2>/dev/null || echo "")
              if [ "$BOOT_COMPLETED" = "1" ]; then
                echo "✅ Boot completed on attempt $i"
                break
              fi
              echo "Boot status: \"$BOOT_COMPLETED\" (attempt $i/120)"
              sleep 5
            done

            adb shell input keyevent 82 || echo "Unlock sent"
            adb shell input keyevent 4 || echo "Back sent"

            adb shell settings put global window_animation_scale 0
            adb shell settings put global transition_animation_scale 0
            adb shell settings put global animator_duration_scale 0

            adb devices
            echo "Boot completed: $(adb shell getprop sys.boot_completed)"
            sleep 10

            mkdir -p screenshots

            npm install -g appium
            appium driver update uiautomator2

            echo "🚀 Starting Appium server..."
            appium --port 4723 --log-level error > appium.log 2>&1 &
            APPIUM_PID=$!

            echo "⏳ Waiting for Appium to start..."
            for i in $(seq 1 60); do
              if curl -s http://localhost:4723/status > /dev/null; then
                echo "✅ Appium server running (attempt $i)"
                break
              fi
              echo "Waiting... ($i/60)"
              sleep 2
            done

            if curl -s http://localhost:4723/status > /dev/null; then
              echo "✅ Appium confirmed running"
            else
              echo "❌ Appium failed to start"
              cat appium.log
              exit 1
            fi

            echo "🧪 Running Calculator tests..."
            npm run test:android || {
              echo "⚠️ Tests failed"
              tail -50 appium.log
            }

            echo "🛑 Stopping Appium..."
            kill $APPIUM_PID || true
            sleep 2

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            screenshots/
            test-results/
            appium.log
          retention-days: 30

      - name: Upload Android logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: android-logs
          path: /tmp/android-*.log
          retention-days: 7
