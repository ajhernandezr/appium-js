name: Android Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  android-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 29
          build-tools: 33.0.0

      - name: Enable KVM (hardware acceleration)
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install dependencies
        run: |
          echo "Installing WebDriverIO and test dependencies..."
          npm ci
          npm list @wdio/cli @wdio/appium-service --depth=0 || echo "Dependencies installed successfully"

      - name: Download demo APK
        run: |
          mkdir -p ./apks
          echo "📦 Downloading demo APK Calculator 5.12.0..."
          curl -L --fail -o ./apks/calculator.apk \
            "https://github.com/SimpleMobileTools/Simple-Calculator/releases/download/5.12.0/calculator-fdroid-release.apk"

          APK_SIZE=$(stat -c%s "./apks/calculator.apk")
          echo "📁 APK size: $APK_SIZE bytes"
          if [ $APK_SIZE -lt 100000 ]; then
            echo "❌ APK file too small — download failed"
            head -20 ./apks/calculator.apk || true
            exit 1
          fi
          echo "✅ Calculator APK downloaded successfully"

      - name: Run tests with Android emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          cores: 2
          ram-size: 3072M
          heap-size: 512M
          avd-name: test_emulator
          force-avd-creation: true  # Ensure AVD is created
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -no-snapshot-save -accel on
          disable-animations: true
          script: echo "🔄 Waiting for emulator..." && adb wait-for-device && echo "⏳ Boot check..." && (i=1; while [ $i -le 120 ] && [ "$(adb shell getprop sys.boot_completed 2>/dev/null || echo '')" != "1" ]; do echo "Boot attempt $i/120"; i=$((i+1)); sleep 5; done) && echo "✅ Boot completed" && adb shell input keyevent 82 && adb shell input keyevent 4 && adb shell settings put global window_animation_scale 0 && adb shell settings put global transition_animation_scale 0 && adb shell settings put global animator_duration_scale 0 && echo "📱 Installing Calculator APK..." && adb install -r ./apks/calculator.apk && echo "✅ APK installed" && echo "📱 Emulator ready" && adb devices && sleep 10 && mkdir -p screenshots && npm install -g appium && appium driver update uiautomator2 && echo "🚀 Starting Appium..." && appium --port 4723 --log-level error > appium.log 2>&1 & APPIUM_PID=$! && echo "⏳ Appium startup..." && (i=1; while [ $i -le 60 ] && ! curl -s http://localhost:4723/status >/dev/null; do echo "Appium attempt $i/60"; i=$((i+1)); sleep 2; done) && echo "✅ Appium ready" && npm run test:android && echo "🛑 Stopping Appium..." && kill $APPIUM_PID

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            screenshots/
            test-results/
            appium.log
          retention-days: 30

      - name: Upload Android logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: android-logs
          path: /tmp/android-*.log
          retention-days: 7
