name: Android Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual execution

jobs:
  android-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Enable KVM (for hardware acceleration)
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Create AVD and generate snapshot for caching
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        cores: 2
        ram-size: 4096M
        heap-size: 1024M
        sdcard-path-or-size: 100M
        avd-name: test_emulator
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: echo "Generated AVD snapshot for caching."

    - name: Install Appium
      run: |
        npm install -g appium@next
        appium driver install uiautomator2

    - name: Download Swiss Airlines APK
      run: |
        mkdir -p ./apks
        # Download Swiss Airlines APK from APKPure (official Play Store version)
        echo "Downloading Swiss Airlines APK (com.yoc.swiss.swiss)..."
        curl -L -o ./apks/swiss-airlines.apk "https://d.apkpure.com/b/APK/com.yoc.swiss.swiss?version=latest"
        
        # Verify APK was downloaded
        if [ -f "./apks/swiss-airlines.apk" ]; then
          echo "✅ Swiss Airlines APK downloaded successfully"
          ls -la ./apks/swiss-airlines.apk
        else
          echo "❌ Failed to download Swiss Airlines APK"
          exit 1
        fi

    - name: Run tests with Android emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        cores: 2
        ram-size: 4096M
        heap-size: 1024M
        avd-name: test_emulator
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          # Wait for emulator to be ready
          adb wait-for-device
          adb shell input keyevent 82 # Unlock screen
          
          # Verify emulator is working
          adb devices
          adb shell getprop sys.boot_completed
          
          # Start Appium in background
          appium --port 4723 &
          sleep 10
          
          # Run tests
          npm run test:android-emulator

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          screenshots/
          test-results/
        retention-days: 30

    - name: Upload Android logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: android-logs
        path: |
          /tmp/android-*.log
        retention-days: 7